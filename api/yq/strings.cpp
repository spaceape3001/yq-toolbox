////////////////////////////////////////////////////////////////////////////////
//
//  YOUR QUILL
//
////////////////////////////////////////////////////////////////////////////////

#include <yq/strings.hpp>

namespace yq {
    const std::string_view     szA                         = "a";
    const std::string_view     szA_Multivector             = "Scalar 'alpha' of the multivector";
    const std::string_view     szA_Quadrilateral           = "First point 'A' of the quadrilateral";
    const std::string_view     szA_Segment                 = "First point 'A' of the segment";
    const std::string_view     szA_Spinor                  = "Scalar 'alpha' of the spinor";
    const std::string_view     szA_Tetrahedron             = "First point 'A' of the tetrahedron";
    const std::string_view     szA_Triangle                = "First point 'A' of the triangle";
    const std::string_view     szAlpha                     = "alpha";
    const std::string_view     szAlpha_Color               = "Alpha channel of the color";
    const std::string_view     szAlt                       = "alt";
    const std::string_view     szAltitude                  = "altitude";
    const std::string_view     szAltitude_Geodetic         = "Altitude of the Geodetic";
    const std::string_view     szAltitude_LatLonAlt        = "Altitude of the LatLonAlt";
    const std::string_view     szAng                       = "ang";
    const std::string_view     szAngle                     = "angle";
    const std::string_view     szAngle_Cylindrical         = "Angle of the cylindrical coordinate";
    const std::string_view     szAngle_Polar               = "Angle of the polar coordinate";
    const std::string_view     szArea                      = "area";
    const std::string_view     szArea_Box                  = "Area of the box";
    const std::string_view     szArea_Circle               = "Area of the box";
    const std::string_view     szB                         = "b";
    const std::string_view     szB_Quadrilateral           = "Second point 'B' of the quadrilateral";
    const std::string_view     szB_Segment                 = "Second point 'B' of the segment";
    const std::string_view     szB_Tetrahedron             = "Second point 'B' of the tetrahedron";
    const std::string_view     szB_Triangle                = "Second point 'B' of the triangle";
    const std::string_view     szBlue                      = "blue";
    const std::string_view     szBlue_Color                = "Blue channel of the color";
    const std::string_view     szBox                       = "box";
    const std::string_view     szBox_Circle                = "Bounding box of the circle";
    const std::string_view     szC                         = "c";
    const std::string_view     szC_Quadrilateral           = "Third point 'C' of the quadrilateral";
    const std::string_view     szC_Tetrahedron             = "Third point 'C' of the tetrahedron";
    const std::string_view     szC_Triangle                = "Third point 'C' of the triangle";
    const std::string_view     szCenter                    = "center";
    const std::string_view     szCenter_Box                = "Center of the box";
    const std::string_view     szCenter_Circle             = "Center of the circle";
    const std::string_view     szCenter_Sphere             = "Center of the sphere";
    const std::string_view     szCir                       = "cir";
    const std::string_view     szCirc                      = "circ";
    const std::string_view     szCircumcircle              = "circumcircle";
    const std::string_view     szCircumcircle_Box          = "Circumcircle of the box";
    const std::string_view     szCircumference             = "circumference";
    const std::string_view     szCircumference_Circle      = "Circumference of the circle";
    const std::string_view     szCnt                       = "cnt";
    const std::string_view     szCorner                    = "corner";
    const std::string_view     szCount                     = "count";
    const std::string_view     szCount_Count               = "Count of the counter";
    const std::string_view     szCount_Polygon             = "Count of points of the polygon";
    const std::string_view     szCount_Polyline            = "Count of points of the polyline";
    const std::string_view     szContains                  = "contains";
    const std::string_view     szContains_Box_Box          = "Tests if other box is inside/touching this box";
    const std::string_view     szContains_Box_Pt           = "Tests if point is inside/touching the box";
    const std::string_view     szCtr                       = "ctr";
    const std::string_view     szCurrent                   = "current";
    const std::string_view     szD                         = "d";
    const std::string_view     szD_Quadrilateral           = "Fourth point 'D' of the quadrilateral";
    const std::string_view     szD_Tetrahedron             = "Fourth point 'D' of the tetrahedron";
    const std::string_view     szDay                       = "day";
    const std::string_view     szDays                      = "days";
    const std::string_view     szDen                       = "den";
    const std::string_view     szDenominator               = "denominator";
    const std::string_view     szDenominator_Fraction      = "Denominator of the fraction";
    const std::string_view     szDepth                     = "depth";
    const std::string_view     szDia                       = "dia";
    const std::string_view     szDiameter                  = "diameter";
    const std::string_view     szDiameter_Circle           = "Diameter of the circle";
    const std::string_view     szDim                       = "dim";
    const std::string_view     szDimension                 = "dimensions";
    const std::string_view     szDimension_Box             = "Dimension(s) of the box";
    const std::string_view     szDir                       = "dir";
    const std::string_view     szDirection                 = "direction";
    const std::string_view     szDirection_Normal          = "Direction of the normal";
    const std::string_view     szDirection_Ray             = "Direction of the ray";
    const std::string_view     szDist                      = "dist";
    const std::string_view     szDistance                  = "distance";
    const std::string_view     szDistance_Plane            = "Distance from origin, along normal, for plane";
    const std::string_view     szDuration                  = "duration";
    const std::string_view     szE                         = "e";
    const std::string_view     szEast                      = "east";
    const std::string_view     szEclipses                  = "eclipses";
    const std::string_view     szEclipses_Box_Box          = "Tests if other box is inside/touching this box";
    const std::string_view     szEclipses_Box_Circle       = "Tests if circle is inside/touching this box";
    const std::string_view     szEclipses_Box_Pt           = "Tests if point is inside/touching the box";
    const std::string_view     szF                         = "f";
    const std::string_view     szG                         = "g";
    const std::string_view     szGreen                     = "green";
    const std::string_view     szGreen_Color               = "Green channel of the color";
    const std::string_view     szH                         = "h";
    const std::string_view     szHeight                    = "height";
    const std::string_view     szHi                        = "hi";
    const std::string_view     szHigh                      = "high";
    const std::string_view     szHigh_Box                  = "High-corner of the box";
    const std::string_view     szHigh_Range                = "High-value of the range";
    const std::string_view     szHour                      = "hour";
    const std::string_view     szHours                     = "hours";
    const std::string_view     szHue                       = "hue";
    const std::string_view     szHue_Color                 = "Hue component of the color";
    const std::string_view     szHypervolume               = "hypervolume";
    const std::string_view     szHypervolume_Box4          = "Hypervolume of the box";
    const std::string_view     szHypervolume_Sphere4       = "Hypervolume of the sphere";
    const std::string_view     szHVol                      = "hvol";
    const std::string_view     szI                         = "i";
    const std::string_view     szI_Coord                   = "I-component of the coordinate";
    const std::string_view     szIm                        = "im";
    const std::string_view     szImag                      = "imag";
    const std::string_view     szImaginary                 = "imaginary";
    const std::string_view     szImaginary_Complex         = "Imaginary component of the complex number";
    const std::string_view     szIncircle                  = "incircle";
    const std::string_view     szIncircle_Box              = "Incircle of the box";
    const std::string_view     szIntensity                 = "intensity";
    const std::string_view     szJ                         = "j";
    const std::string_view     szJ_Coord                   = "J-component of the coordinate";
    const std::string_view     szK                         = "k";
    const std::string_view     szK_Coord                   = "K-component of the coordinate";
    const std::string_view     szL                         = "l";
    const std::string_view     szL_Coord                   = "L-component of the coordinate";
    const std::string_view     szLat                       = "lat";
    const std::string_view     szLatitude                  = "latitude";
    const std::string_view     szLatitude_Geodetic         = "Latitude of the Geodetic";
    const std::string_view     szLatitude_LatLon           = "Latitude of the LatLon";
    const std::string_view     szLatitude_LatLonAlt        = "Latitude of the LatLonAlt";
    const std::string_view     szLen                       = "len";
    const std::string_view     szLen²                      = "len2";
    const std::string_view     szLength                    = "length";
    const std::string_view     szLength_Vector             = "Length of the vector";
    const std::string_view     szLength²                   = "length2";
    const std::string_view     szLength²_Vector            = "Length SQUARED of the vector";
    const std::string_view     szLightness                 = "lightness";
    const std::string_view     szLightness_Color           = "Lightness component of the color";
    const std::string_view     szLo                        = "lo";
    const std::string_view     szLon                       = "lon";
    const std::string_view     szLongitude                 = "longitude";
    const std::string_view     szLongitude_Geodetic        = "Longitude of the Geodetic";
    const std::string_view     szLongitude_LatLon          = "Longitude of the LatLon";
    const std::string_view     szLongitude_LatLonAlt       = "Longitude of the LatLonAlt";
    const std::string_view     szLow                       = "low";
    const std::string_view     szLow_Box                   = "Low-corner of the box";
    const std::string_view     szLow_Range                 = "Low-value of the range";
    const std::string_view     szM                         = "m";
    const std::string_view     szM_Coord                   = "M-component of the coordinate";
    const std::string_view     szMag                       = "mag";
    const std::string_view     szMagnitude                 = "magnitude";
    const std::string_view     szMagnitude_Complex         = "Magnitude of the complex number";
    const std::string_view     szMass                      = "mass";
    const std::string_view     szMatter                    = "matter";
    const std::string_view     szMin                       = "min";
    const std::string_view     szMinute                    = "minute";
    const std::string_view     szMinutes                   = "minutes";
    const std::string_view     szMonth                     = "month";
    const std::string_view     szMonths                    = "months";
    const std::string_view     szN                         = "n";
    const std::string_view     szN_Coord                   = "N-component of the coordinate";
    const std::string_view     szNE                        = "ne";
    const std::string_view     szNormal                    = "normal";
    const std::string_view     szNormal_Plane              = "Normal to the plane";
    const std::string_view     szNorth                     = "north";
    const std::string_view     szNortheast                 = "northeast";
    const std::string_view     szNortheast_Box             = "North-east corner of the box";
    const std::string_view     szNorthwest                 = "northwest";
    const std::string_view     szNorthwest_Box             = "North-west corner of the box";
    const std::string_view     szNum                       = "num";
    const std::string_view     szNumerator                 = "numerator";
    const std::string_view     szNumerator_Fraction        = "Numerator of the fraction";
    const std::string_view     szNW                        = "nw";
    const std::string_view     szO                         = "o";
    const std::string_view     szOri                       = "ori";
    const std::string_view     szOrientation               = "orientation";
    const std::string_view     szOrientation_Pose          = "Orientation of the pose";
    const std::string_view     szOverlaps                  = "overlaps";
    const std::string_view     szOverlaps_Box_Box          = "Tests if other box overlaps this box";
    const std::string_view     szP                         = "p";
    const std::string_view     szPercent                   = "percent";
    const std::string_view     szPeri                      = "peri";
    const std::string_view     szPerimeter                 = "perimeter";
    const std::string_view     szPerimeter_Box             = "Perimeter of the box";
    const std::string_view     szPerimeter_Circle          = "Perimeter of the circle";
    const std::string_view     szPoint                     = "point";
    const std::string_view     szPoint_Ray                 = "Point of the ray";
    const std::string_view     szPos                       = "pos";
    const std::string_view     szPosition                  = "position";
    const std::string_view     szPosition_Pose             = "Position of the pose";
    const std::string_view     szPosition_Rectangle        = "Corner of the rectangle, it's nominal position";
    const std::string_view     szProject                   = "global";
    const std::string_view     szProject_Box               = "Project local point (u/v/w) to real space (x/y/z)";
    const std::string_view     szPt                        = "pt";
    const std::string_view     szQ                         = "q";
    const std::string_view     szR                         = "r";
    const std::string_view     szRad                       = "rad";
    const std::string_view     szRadius                    = "radius";
    const std::string_view     szRadius_Circle             = "Radius of the circle";
    const std::string_view     szRadius_Cylindrical        = "Radius of the cylindrical coordinate";
    const std::string_view     szRadius_Polar              = "Radius of the polar coordinate";
    const std::string_view     szRadius_Sphere             = "Radius of the sphere";
    const std::string_view     szRe                        = "re";
    const std::string_view     szReal                      = "real";
    const std::string_view     szReal_Complex              = "Real component of the comolex number";
    const std::string_view     szRed                       = "red";
    const std::string_view     szRed_Color                 = "Red channel of the color";
    const std::string_view     szS                         = "s";
    const std::string_view     szSArea                     = "sarea";
    const std::string_view     szSaturation                = "saturation";
    const std::string_view     szSaturation_Color          = "Saturation component of the color";
    const std::string_view     szSE                        = "se";
    const std::string_view     szSec                       = "sec";
    const std::string_view     szSecond                    = "second";
    const std::string_view     szSeconds                   = "seconds";
    const std::string_view     szSize                      = "size";
    const std::string_view     szSize_Box                  = "Size of the box";
    const std::string_view     szSize_Rectangle            = "Size of the rectangle";
    const std::string_view     szSouth                     = "south";
    const std::string_view     szSoutheast                 = "southeast";
    const std::string_view     szSoutheast_Box             = "North-east corner of the box";
    const std::string_view     szSouthwest                 = "southwest";
    const std::string_view     szSouthwest_Box             = "North-west corner of the box";
    const std::string_view     szSurfaceArea               = "surface_area";
    const std::string_view     szSurfaceArea_Box3          = "Surface area of the box";
    const std::string_view     szSW                        = "sw";
    const std::string_view     szT                         = "t";
    const std::string_view     szTemperature               = "temperature";
    const std::string_view     szTime                      = "time";
    const std::string_view     szUnproject                 = "local";
    const std::string_view     szUnproject_Box             = "Project global point (x/y/z) to local space (u/v/w)";
    const std::string_view     szU                         = "u";
    const std::string_view     szValid                     = "valid";
    const std::string_view     szValid_Box                 = "Tests if the box is valid (ie, lo < hi)";
    const std::string_view     szValid_Circle              = "Tests if the circle is valid (ie, radius >= 0)";
    const std::string_view     szVol                       = "vol";
    const std::string_view     szVolume                    = "volume";
    const std::string_view     szVolume_Box                = "Volume of the box";
    const std::string_view     szVolume_Sphere             = "Volume of the sphere";
    const std::string_view     szW                         = "w";
    const std::string_view     szW_Box                     = "W range of the box";
    const std::string_view     szW_Multivector             = "W component of the multivector";
    const std::string_view     szW_Quaternion              = "W component of the quaternion";
    const std::string_view     szW_Size                    = "W component of the size, commonly referred to as the duration";
    const std::string_view     szW_Vector                  = "W component of the vector";
    const std::string_view     szWidth                     = "width";
    const std::string_view     szWest                      = "west";
    const std::string_view     szWW                        = "ww";
    const std::string_view     szWW_Tensor                 = "WW component of the tensor";
    const std::string_view     szWX                        = "wx";
    const std::string_view     szWX_Bivector               = "WX component of the bivector";
    const std::string_view     szWX_Multivector            = "WX component of the multivector";
    const std::string_view     szWX_Tensor                 = "WX component of the tensor";
    const std::string_view     szWXY                       = "wxy";
    const std::string_view     szWXY_Multivector           = "WXY component of the multivector";
    const std::string_view     szWXY_Trivector             = "WXY component of the trivector";
    const std::string_view     szWY                        = "wy";
    const std::string_view     szWY_Tensor                 = "WY component of the tensor";
    const std::string_view     szWZ                        = "wz";
    const std::string_view     szWZ_Tensor                 = "WZ component of the tensor";
    const std::string_view     szV                         = "v";
    const std::string_view     szValue                     = "value";
    const std::string_view     szValue_Color               = "Value component of the color";
    const std::string_view     szX                         = "x";
    const std::string_view     szX_Box                     = "X range of the box";
    const std::string_view     szX_Multivector             = "X component of the multivector";
    const std::string_view     szX_Quaternion              = "X component of the quaternion";
    const std::string_view     szX_Size                    = "X component of the size, commonly referred to as the width";
    const std::string_view     szX_Vector                  = "X component of the vector";
    const std::string_view     szXW                        = "xw";
    const std::string_view     szXW_Tensor                 = "XW component of the tensor";
    const std::string_view     szXX                        = "xx";
    const std::string_view     szXX_Tensor                 = "XX component of the tensor";
    const std::string_view     szXY                        = "xy";
    const std::string_view     szXY_Bivector               = "XY component of the bivector";
    const std::string_view     szXY_Multivector            = "XY component of the multivector";
    const std::string_view     szXY_Spinor                 = "XY component of the spinor";
    const std::string_view     szXY_Tensor                 = "XY component of the tensor";
    const std::string_view     szXYZ                       = "xyz";
    const std::string_view     szXYZ_Multivector           = "XYZ component of the multivector";
    const std::string_view     szXYZ_Trivector             = "XYZ component of the trivector";
    const std::string_view     szXYZW                      = "xyzw";
    const std::string_view     szXYZW_Multivector          = "XYZW component of the multivector";
    const std::string_view     szXYZW_Quadvector           = "XYZW component of the quadvector";
    const std::string_view     szXZ                        = "xz";
    const std::string_view     szXZ_Bivector               = "XZ component of the bivector";
    const std::string_view     szXZ_Multivector            = "XZ component of the multivector";
    const std::string_view     szXZ_Tensor                 = "XZ component of the tensor";
    const std::string_view     szY                         = "y";
    const std::string_view     szY_Box                     = "Y range of the box";
    const std::string_view     szY_Multivector             = "Y component of the multivector";
    const std::string_view     szY_Quaternion              = "Y component of the quaternion";
    const std::string_view     szY_Size                    = "Y component of the size, commonly referred to as the height";
    const std::string_view     szY_Vector                  = "Y component of the vector";
    const std::string_view     szYear                      = "year";
    const std::string_view     szYears                     = "years";
    const std::string_view     szYW                        = "yw";
    const std::string_view     szYW_Bivector               = "YW component of the bivector";
    const std::string_view     szYW_Multivector            = "YW component of the Multivector";
    const std::string_view     szYW_Tensor                 = "YW component of the tensor";
    const std::string_view     szYX                        = "yx";
    const std::string_view     szYX_Bivector               = "YX component of the bivector";
    const std::string_view     szYX_Multivector            = "YX component of the multivector";
    const std::string_view     szYX_Tensor                 = "YX component of the tensor";
    const std::string_view     szYY                        = "yy";
    const std::string_view     szYY_Tensor                 = "YY component of the tensor";
    const std::string_view     szYZ                        = "yz";
    const std::string_view     szYZ_Bivector               = "YZ component of the bivector";
    const std::string_view     szYZ_Multivector            = "YZ component of the multivector";
    const std::string_view     szYZ_Tensor                 = "YZ component of the tensor";
    const std::string_view     szYZW                       = "yzw";
    const std::string_view     szYZW_Multivector           = "YZW component of the multivector";
    const std::string_view     szYZW_Trivector             = "YZW component of the trivector";
    const std::string_view     szZ                         = "z";
    const std::string_view     szZ_Box                     = "Z range of the box";
    const std::string_view     szZ_Cylindrical             = "Z component of the cylindrical coordinate";
    const std::string_view     szZ_Multivector             = "Z component of the multivector";
    const std::string_view     szZ_Quaternion              = "Z component of the quaternion";
    const std::string_view     szZ_Size                    = "Z component of the size, commonly referred to as the depth";
    const std::string_view     szZ_Vector                  = "Z component of the vector";
    const std::string_view     szZ_Vector2                 = "Promotes to Vector3 with a z-value";
    const std::string_view     szZW                        = "zw";
    const std::string_view     szZW_Bivector               = "ZW component of the bivector";
    const std::string_view     szZW_Multivector            = "ZW component of the multivector";
    const std::string_view     szZW_Tensor                 = "ZW component of the tensor";
    const std::string_view     szZWX                       = "zwx";
    const std::string_view     szZWX_Multivector           = "ZWX component of the multivector";
    const std::string_view     szZWX_Trivector             = "ZWX component of the trivector";
    const std::string_view     szZX                        = "zx";
    const std::string_view     szZX_Bivector               = "ZX component of the bivector";
    const std::string_view     szZX_Multivector            = "ZX component of the multivector";
    const std::string_view     szZX_Tensor                 = "ZX component of the tensor";
    const std::string_view     szZY                        = "zy";
    const std::string_view     szZY_Tensor                 = "ZY component of the tensor";
    const std::string_view     szZZ                        = "zz";
    const std::string_view     szZZ_Tensor                 = "ZZ component of the tensor";
}

